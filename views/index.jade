!!! 5
html
  head
    meta(name='viewport', content='initial-scale=1.0, user-scalable=no')
    style(type='text/css')
      html { height: 100% }
      body { height: 100%; margin: 0; padding: 0 }
      #map_canvas { height: 100% }
    script(type='text/javascript', src='http://maps.googleapis.com/maps/api/js?key=AIzaSyBSjiD2zU2BUca0341b2nDsyTpD70supRU&sensor=false')
    script(type='text/javascript', src='/javascripts/d3.v2.min.js')
    script(type='text/javascript', src='/javascripts/d3.geo.js')
    script(type='text/javascript', src='/javascripts/polymaps.js')
    script(type='text/javascript', src='/javascripts/tiler.js')

  body
   #map
   script
        var po = org.polymaps;
        var map = po.map()
                    .container(d3.select("#map").append("svg:svg").node())
                    .zoom(11)
                    .add(po.drag())
                    .add(po.wheel().smooth(false))
                    .add(po.dblclick())
                    .add(po.arrow());

        map.add(po.image()
               .url(po.url("http://{S}tile.cloudmade.com/371b6d7f3176467186597538e8ed7700/998/256/{Z}/{X}/{Y}.png")
               .hosts(["a.", "b.", "c.", ""])));

        //add attacks layer
        map.add(attacks('attacks'));
        map.add(po.compass()
                  .pan("none"));

        //center the map on Athens          
        map.center({lat: 37.97918,  lon: 23.716647});

        //custom attacks layer
        function attacks(url){
          // Create the tiler, for organizing our points into tile boundaries.
          var tiler = d3.geo.tiler()
              .zoom(11)
              .location(function(d) { return [d.value.lon, d.value.lat]; });

          // Create the base layer object, using our tile factory.
          var layer = po.layer(load);

          // Load the attacks data. When the data comes back, reload.
          d3.json(url, function(json) {
            tiler.points(d3.entries(json.attacks));
            layer.reload();
          });

          // Custom tile implementation.
          function load(tile, projection) {
            projection = projection(tile).locationPoint;

            // Add an svg:g for each attack.
            var g = d3.select(tile.element = po.svg("g")).selectAll("g")
                .data(tiler.tile(tile.column, tile.row, tile.zoom))
              .enter().append("svg:g")
                .attr("transform", transform);

            // Add a circle.
            g.append("svg:circle")
                .style("fill", d3.hsl(Math.random() * 360, 1, .5))
                .attr("r", 4.5);

            // Add a label.
            g.append("svg:text")
                .attr("x", 7)
                .attr("dy", ".31em")
                .text(function(d) { return d.value.severity; });

            function transform(d) {
              d = projection({lon: d.value.lon, lat: d.value.lat});
              return "translate(" + d.x + "," + d.y + ")";
            }
          }

          return layer;
        }
